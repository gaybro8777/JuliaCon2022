name: CI
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: MediaMixModellingDemo
    strategy:
      fail-fast: false
      matrix:
        version:
          # - '1.6'
          - '1.7'
          #- 'nightly'
        os:
          - ubuntu-latest
        arch:
          # - x64
          - x86
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
        with: 
          project: MediaMixModellingDemo/
      - uses: julia-actions/julia-runtest@v1
        with: 
          project: MediaMixModellingDemo/
      # - uses: julia-actions/julia-processcoverage@v1
      # - uses: codecov/codecov-action@v2
        # with:
          # files: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: MediaMixModellingDemo
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - uses: julia-actions/julia-buildpkg@v1
        with: 
          project: MediaMixModellingDemo/ 
      # - run: cd .. && ls 
      - name: Install GitHubActions.jl in its own (shared) environment
        run: |
          julia --color=yes -e '
            using Pkg
            Pkg.activate("docs-logger-env"; shared=true)
            Pkg.add(Pkg.PackageSpec(name="GitHubActions", version="0.1"))
            Pkg.instantiate()'
      - name: Install the dev package
        run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - name: Generate docs 
        run: |
          julia --project=docs -e '
            @eval Module() begin
                  push!(LOAD_PATH, "@docs-logger-env") # access GitHubActions.jl
                  import Logging, GitHubActions
                  Logging.global_logger(GitHubActions.GitHubActionsLogger())
                  pop!(LOAD_PATH)
              end
              include("docs/make.jl")'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      # - uses: julia-actions/julia-docdeploy@v1
        # with:
          # prefix: ls && cd 'MediaMixModellingDemo' ||
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run doctests
        run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using MediaMixModellingDemo
            DocMeta.setdocmeta!(MediaMixModellingDemo, :DocTestSetup, :(using MediaMixModellingDemo); recursive=true)
            doctest(MediaMixModellingDemo)'
